[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/003 _Blog/Blog2.html",
    "href": "posts/003 _Blog/Blog2.html",
    "title": "Sports Prompts and Response Sensitivity",
    "section": "",
    "text": "Prompting\nFor my first test, I wanted to see how small changes in prompts affect how an LLM talks about sports. I used the Philadelphia Eagles as my subject.\n\nPrompt A: “Summarize the Eagles’ 2023 season in one sentence.”\n\nThe one-sentence answer gave a broad evaluation: “The Eagles had a strong season but fell short in the playoffs.”\n\nPrompt B: “Summarize the Eagles’ 2023 season in five bullet points.”\n\nThe five-bullet version highlighted key details:\n\nregular season record\nstandout players\noffensive strengths\ndefensive weaknesses\nplayoff loss\n\n\n\nObservations\nWhat stood out is that the structure of the output wasn’t just shorter or longer, the bullet-point response reorganized the story. This shows that prompt phrasing shapes how an LLM frames sports narratives, which is important if you’re using these models for sports journalism or fan engagement.\n\n\n\nPhiladelphia Eagles"
  },
  {
    "objectID": "posts/006_Blog/Untitled.html",
    "href": "posts/006_Blog/Untitled.html",
    "title": "Cleaning Up Messy Notes with GPT",
    "section": "",
    "text": "Displaying LLM Outputs\n\n\nThe Image\n\n\n\n\nSample output\n\n\n\nThe Copy Paste\n\nHere’s an example of ChatGPT rewriting messy lecture notes\n\n\nThe Organized Notes\nIn class this week my notes came out really messy. Lots of half-sentences and random words. I wanted to see if GPT-5 could make them clearer, so I asked:\n“Rewrite these notes into a clean bullet point list.”\nIt worked well — the output grouped ideas into Definitions, Formulas, and Examples. It was much easier to study from than my original scribbles.\n\n\nCombination of both!\n\nPrompt\n\n&lt;blockquote&gt;\n    Rewrite my messy class notes into a clear bullet point list\n&lt;/blockquote&gt;\n\nResponse\n\n&lt;blockquote&gt;\n    Sure! I’ve cleaned them up and organized them into sections.\n&lt;/blockquote&gt;\n\n\n\nReflection\n\nThis showed me how useful GPT can be for studying. It doesn’t just fix grammar — it makes notes more structured and organized. I’d still double-check details, but as a study helper it really saves time."
  },
  {
    "objectID": "posts/005_Blog/Untitled.html",
    "href": "posts/005_Blog/Untitled.html",
    "title": "Using LLMs to Write Emails",
    "section": "",
    "text": "Displaying LLM Outputs\n\n\nThe Copy Paste\n\n\n\n\nWriting Emails at University\n\n\nHere’s a short example of ChatGPT writing an email\n\n\nThe Email Draft\nThis week I had to email a professor about missing class for a family commitment. Normally, I would just write it myself, but I wanted to see how ChatGPT would handle the situation. I asked:\n“Write me a polite email to my professor explaining I will miss class on Friday due to a family event.”\nThe model produced the following draft:\n\nSubject: Request to Miss Class on Friday\nDear Professor,\nI hope this message finds you well. I am writing to let you know that I will not be able to attend class on Friday due to a family event. I will make sure to catch up on the material covered. Thank you for your understanding.\nSincerely, [Your Name]\n\nI thought this was actually pretty close to what I’d send. The tone was respectful and professional, but it was also a little too generic. I edited it to include the course name and asked if there was anything I should review before the next class.\nThis showed me that while ChatGPT is a good starting point, I still need to personalize the response to sound like me.\n\n\nSome alternatives\n\n\nThe Quote\n\n\nWrite me a polite email to my professor about missing class Of course! Would you like me to keep it formal, or more casual?\n\n\nChanging Background Colors\n\n\nOf course! Would you like me to keep it formal, or more casual?\n\n\nCombination of both!\n\nPrompt\n\n&lt;blockquote&gt;\n    Write me a polite email to my professor about missing class\n&lt;/blockquote&gt;\n\nResponse\n\n&lt;blockquote&gt;\n    Of course! Would you like me to keep it formal, or more casual?\n&lt;/blockquote&gt;\n\n\n\nIntegrating responses\n\nThis week I wanted to explore how GPT-5 handles student communication tasks. We often hear about people using it for essays or coding, but I think everyday uses like emailing professors are just as important.\nWhen I tested it, the response was professional and grammatically correct, but also generic. In practice, I’d use it as a template, then tweak details to make sure it sounds like me.\nThis made me think about how LLMs shape communication: they’re great at giving us a baseline of clarity and politeness, but personalization still matters — especially in academic settings where tone can affect relationships."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Alex Rosen’s Explorations with LLMs",
    "section": "",
    "text": "Cleaning Up Messy Notes with GPT\n\n\n\nllms\n\nstudying\n\n\n\n\n\n\n\n\n\nSep 19, 2025\n\n\nAlex Rosen\n\n\n\n\n\n\n\n\n\n\n\n\nUsing LLMs to Write Emails\n\n\n\nllms\n\ncommunication\n\nuniversity\n\n\n\n\n\n\n\n\n\nSep 17, 2025\n\n\nAlex Rosen\n\n\n\n\n\n\n\n\n\n\n\n\nImage Generation with ChatGPT\n\n\n\nLLMs\n\nImage Generation\n\n\n\n\n\n\n\n\n\nSep 14, 2025\n\n\nAlex Rosen\n\n\n\n\n\n\n\n\n\n\n\n\nSports Prompts and Response Sensitivity\n\n\n\nLLMs\n\nsports\n\nfootball\n\n\n\n\n\n\n\n\n\nSep 7, 2025\n\n\nAlex Rosen\n\n\n\n\n\n\n\n\n\n\n\n\nVibe Coding: Finding Flow in Software Development\n\n\n\n\n\n\n\n\nSep 3, 2025\n\n\nAlex Rosen\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/004_Blog/Untitled.html",
    "href": "posts/004_Blog/Untitled.html",
    "title": "Image Generation with ChatGPT",
    "section": "",
    "text": "Generating Images with ChatGPT\nFor this experiment, I tested how an LLM with image-generation can create different visuals from slightly different prompts.\nPrompt A: “Generate an image of a cat sitting on a couch.”\nPrompt B: “Generate an image of a cat lounging on a couch with sunglasses.”\nThe first result was a standard realistic-looking cat image.\nThe second result added humor and personality, showing a playful cat with sunglasses.\nThis shows that small wording changes don’t just shift text output, but also the visual style of generated images. It highlights how careful prompt wording can make the difference between a generic picture and something more creative or entertaining.\n\n\n\nPrompt A: Cat sitting on a couch\n\n\n\n\n\nPrompt B: Cat lounging with sunglasses"
  },
  {
    "objectID": "posts/002_test_test/test_test.html",
    "href": "posts/002_test_test/test_test.html",
    "title": "Vibe Coding: Finding Flow in Software Development",
    "section": "",
    "text": "When most people think about programming, they picture solving technical problems or shipping features. But there’s another side to coding — one that feels less like work and more like entering a state of flow. This is what I like to call vibe coding.\n\n\n\nVibe coding isn’t about deadlines, bug tickets, or sprint goals. It’s about writing code for the sake of focus, creativity, and momentum.\nIn practice, this might mean: - Putting on music that helps you focus\n- Cleaning up your environment and editor so distractions disappear\n- Building something small, experimental, or even silly — just to see where it goes\nIt’s the programming equivalent of sketching in a notebook: low-pressure, creative, and surprisingly rewarding.\n\n\n\n\nModern development is often fast-paced and outcome-driven. While productivity is important, it can also lead to burnout if every coding session is framed around efficiency. Vibe coding offers a counterbalance — a reminder that programming can be playful and exploratory.\nBenefits include: - Improved creativity: experimenting without constraints often leads to unexpected ideas.\n- Sustained motivation: coding becomes something you look forward to, not just a task list.\n- Skill growth: practice in a low-stakes environment helps sharpen intuition and technique.\n\n\n\n\nIf you want to bring vibe coding into your own workflow, here are some ways to start: 1. Curate a playlist: lo-fi beats, ambient soundtracks, or anything that keeps you engaged without distraction.\n2. Set the stage: dim lights, a clear desk, maybe even a favorite drink nearby.\n3. Pick a fun project: it could be a visualization of your Spotify history, a quirky bot, or a small tool only you will ever use.\n4. Let go of outcomes: the point isn’t to finish — it’s to explore.\n\n\n\n\nCoding doesn’t always have to be serious. Sometimes the best way to unlock creativity, reduce stress, and rediscover joy in programming is to let yourself vibe with the process.\nSo next time you sit down to write code, try setting aside the pressure of productivity. Put on some music, open a blank file, and let the vibes lead you — you might be surprised by what you create."
  },
  {
    "objectID": "posts/002_test_test/test_test.html#what-is-vibe-coding",
    "href": "posts/002_test_test/test_test.html#what-is-vibe-coding",
    "title": "Vibe Coding: Finding Flow in Software Development",
    "section": "",
    "text": "Vibe coding isn’t about deadlines, bug tickets, or sprint goals. It’s about writing code for the sake of focus, creativity, and momentum.\nIn practice, this might mean: - Putting on music that helps you focus\n- Cleaning up your environment and editor so distractions disappear\n- Building something small, experimental, or even silly — just to see where it goes\nIt’s the programming equivalent of sketching in a notebook: low-pressure, creative, and surprisingly rewarding."
  },
  {
    "objectID": "posts/002_test_test/test_test.html#why-vibe-coding-matters",
    "href": "posts/002_test_test/test_test.html#why-vibe-coding-matters",
    "title": "Vibe Coding: Finding Flow in Software Development",
    "section": "",
    "text": "Modern development is often fast-paced and outcome-driven. While productivity is important, it can also lead to burnout if every coding session is framed around efficiency. Vibe coding offers a counterbalance — a reminder that programming can be playful and exploratory.\nBenefits include: - Improved creativity: experimenting without constraints often leads to unexpected ideas.\n- Sustained motivation: coding becomes something you look forward to, not just a task list.\n- Skill growth: practice in a low-stakes environment helps sharpen intuition and technique."
  },
  {
    "objectID": "posts/002_test_test/test_test.html#how-to-try-it-yourself",
    "href": "posts/002_test_test/test_test.html#how-to-try-it-yourself",
    "title": "Vibe Coding: Finding Flow in Software Development",
    "section": "",
    "text": "If you want to bring vibe coding into your own workflow, here are some ways to start: 1. Curate a playlist: lo-fi beats, ambient soundtracks, or anything that keeps you engaged without distraction.\n2. Set the stage: dim lights, a clear desk, maybe even a favorite drink nearby.\n3. Pick a fun project: it could be a visualization of your Spotify history, a quirky bot, or a small tool only you will ever use.\n4. Let go of outcomes: the point isn’t to finish — it’s to explore."
  },
  {
    "objectID": "posts/002_test_test/test_test.html#closing-thoughts",
    "href": "posts/002_test_test/test_test.html#closing-thoughts",
    "title": "Vibe Coding: Finding Flow in Software Development",
    "section": "",
    "text": "Coding doesn’t always have to be serious. Sometimes the best way to unlock creativity, reduce stress, and rediscover joy in programming is to let yourself vibe with the process.\nSo next time you sit down to write code, try setting aside the pressure of productivity. Put on some music, open a blank file, and let the vibes lead you — you might be surprised by what you create."
  }
]